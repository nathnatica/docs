#file rename
rename UK JP *_UK.*

#check non ascii char
grep --color='auto' -P -n "[\x80-\xFF]" file.xml

grep "en-GB" *

#grep something recursive ignore-case with extension and print number
grep -r -n -i --include \*.jsp --include \*.html '<!--.*JMAS' ./

#tee sample
(scp localhost:/home/user/notExistRemoteFile ./localFile 2>&1 >&3 | tee scperror.log) 3>/dev/null >> batch.log

#run last command as root
sudo !!

#server currenty directory at localhost
python -m SimpleHTTPServer 8080

#save a file in vim without needed permissions
:w !sudo tee %

#run the previous shell command replacing first "foo" with "bar"
^foo^bar^

#run the previous shell command replacing all "foo" with "bar"
!!:gs/foo/bar


#find the last command begins with "xxx", but avoid running
!xxx:p


#copy public-key to remote for passwordless auth
ssh-copy-id remote
#(or)
scp ~/.ssh/id_rsa.pub remote
ssh remote
cat id_rsa.pub >> ~/.ssh/authorized_keys



#edit files in-place with backup file
sed -i'.bak' 's/from/to/g' file

#convert dos newline to unix newline
sed -i 's/.$//' file

#convert unix newline to dos newline
sed -i "s/$/`echo -e \\\r`/" file



# extract csv without last 16 columns in a dirctory
# and print out to another directory
# a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q
# -> a,b,c,d,e,f,g,h
for i in $(ls -1 /tmp/Report_*.csv);
do
	/bin/awk 'BEGIN { FS="\",\""; ORS = "\r\n"; OFS="\",\"" } { for (i=1;i<=NF-10;i++){ printf $i OFS }; print $(NF-9) "\"" }' $i > `echo $i | sed -e 's:tmp/Report_:temp/report_X_:g'`;
done


#change login shell
less /etc/shells
chsh -s /bin/zsh


# check duplicated line in file
sort file | uniq -c | grep -v '^ *1 '

sort input.txt | uniq > sorted.uniq.txt


# delete .svn folders
find -type d -name ".svn" -exec rm -rf {} \;


# find non CRLF file
find ./ -name "*.java" -exec file {} \; | grep -v "CRLF"

# find files with text
find . -name "*.java" | grep -v svn | xargs grep -i 'some text' | awk -F: '{print $1}' | sort | uniq

# grep including sub directories
# -H show file path
# -h not show file path
# -n show line number
# -r recursive search
grep -Hrn 'some text' path/to/dir


# tomcat debugging throuhg tunnel
# LOCAL ---- PROXY ---- REMOTE
#
ssh -L <local port>:localhost:<proxy port> <proxy account>@<proxy domain> -i /c/TEMP/chika_sata.pem
ssh -L <proxy port>:localhost:<remote port> <remote account>@<remote domain>


# format xml file (one line per tag)
tr '\n' ' ' < input.xml | sed 's/>[ \t]*</></g' | sed 's/><tagname/>\n<tagname/g' > output.xml
# and remove html comments(use perl for non greedy pattern matching)
cat input.xml | perl -pe 's/<!--.*?-->//g' > output.xml



# check whether new line exists at eof
find ./ -type f -exec newline_at_eof.sh {} \;

if [ ! -z $(tail -c 1 ./c) ]; then
  echo "no eof";
fi

# return string value at function
function GET_VALUE() {
	echo 'VAL'
}

val=$( GET_VALUE ${PARAM} )


# bash loop line by line from input file
cnt=0;
for var in `cat inpuf.file`
do
	#echo $var
	cnt=$(( cnt + 1 ))
	if [ $cnt -eq 100 ]; then
		echo sleep;
		sleep 1;
		cnt=0;
	fi
done

# bash string length
v="abc";
echo ${#v};

# get data from 2nd line(preserve line ending)
sed -nb '2,$p' < input >> output

# tar
# create
tar -cf archive.tar ./relative/path/file
# add
tar -rf archive.tar ./relative/path/file
# extract
tar -xf archive.tar
# list
tar -tf archive.tar

# bash function return value check
function getVal() {
	return 0;
}

if getVal ${arg} && getVal ${arg2}; then
	# do something(check ok and check ok)
fi

# squeeze blank line
cat -s ${file}


# add suffix to all file
autoload zmv # in ./.zshrc
zmv -W '*' '*.jpg'

# scp
#local to remote
scp -r ./file.txt tomcat@192.168.1.127:/var/tmp/

# remote to local
scp -r tomcat@192.168.1.127:/var/tmp/file ./
